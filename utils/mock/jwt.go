// Code generated by MockGen. DO NOT EDIT.
// Source: jwt.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockIGenerateJWT is a mock of IGenerateJWT interface.
type MockIGenerateJWT struct {
	ctrl     *gomock.Controller
	recorder *MockIGenerateJWTMockRecorder
}

// MockIGenerateJWTMockRecorder is the mock recorder for MockIGenerateJWT.
type MockIGenerateJWTMockRecorder struct {
	mock *MockIGenerateJWT
}

// NewMockIGenerateJWT creates a new mock instance.
func NewMockIGenerateJWT(ctrl *gomock.Controller) *MockIGenerateJWT {
	mock := &MockIGenerateJWT{ctrl: ctrl}
	mock.recorder = &MockIGenerateJWTMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIGenerateJWT) EXPECT() *MockIGenerateJWTMockRecorder {
	return m.recorder
}

// GenerateJWT mocks base method.
func (m *MockIGenerateJWT) GenerateJWT(userID uuid.UUID) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateJWT", userID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateJWT indicates an expected call of GenerateJWT.
func (mr *MockIGenerateJWTMockRecorder) GenerateJWT(userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateJWT", reflect.TypeOf((*MockIGenerateJWT)(nil).GenerateJWT), userID)
}
