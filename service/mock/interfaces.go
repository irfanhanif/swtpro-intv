// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	service "github.com/irfanhanif/swtpro-intv/service"
)

// MockIRegisterNewUser is a mock of IRegisterNewUser interface.
type MockIRegisterNewUser struct {
	ctrl     *gomock.Controller
	recorder *MockIRegisterNewUserMockRecorder
}

// MockIRegisterNewUserMockRecorder is the mock recorder for MockIRegisterNewUser.
type MockIRegisterNewUserMockRecorder struct {
	mock *MockIRegisterNewUser
}

// NewMockIRegisterNewUser creates a new mock instance.
func NewMockIRegisterNewUser(ctrl *gomock.Controller) *MockIRegisterNewUser {
	mock := &MockIRegisterNewUser{ctrl: ctrl}
	mock.recorder = &MockIRegisterNewUserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRegisterNewUser) EXPECT() *MockIRegisterNewUserMockRecorder {
	return m.recorder
}

// RegisterNewUser mocks base method.
func (m *MockIRegisterNewUser) RegisterNewUser(newUser service.NewUser) (uuid.UUID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterNewUser", newUser)
	ret0, _ := ret[0].(uuid.UUID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RegisterNewUser indicates an expected call of RegisterNewUser.
func (mr *MockIRegisterNewUserMockRecorder) RegisterNewUser(newUser interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterNewUser", reflect.TypeOf((*MockIRegisterNewUser)(nil).RegisterNewUser), newUser)
}
