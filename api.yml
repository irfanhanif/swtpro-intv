openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost:8080

tags:
  - name: Sign Up & Login
    description: APIs for new user sign up and login
  - name: User Profile
    description: APIs for user profile data

paths:
  /v1/users:
    post:
      tags:
        - Sign Up & Login
      summary: Create a new user
      description: Use this api to register a new user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostV1UsersRequest"
      responses:
        201:
          description: A new user successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostV1UsersResponse201"
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#components/schemas/PostV1UsersResponse400"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  /v1/tokens:
    post:
      tags:
        - Sign Up & Login
      summary: Create token for a user
      description: Use this api to create token for a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostV1TokensRequest"
      responses:
        201:
          description: A new tokens successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostV1TokensResponse201"
        400:
          description: Unsuccessful login
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"

components:
  schemas:
    PostV1UsersRequest:
      type: object
      required:
        - phoneNumber
        - fullName
        - password
      properties:
        phoneNumber:
          type: string
          example: '+6281234567890'
        fullName:
          type: string
          example: John Doe
        password:
          type: string
          example: ThisIsAPassword1234&

    PostV1UsersResponse201:
      type: object
      properties:
        userID:
          type: uuid
          example: "7e6e5b8e-007a-4bd4-bbcd-57b8e06a029d"

    PostV1UsersResponse400:
      type: object
      properties:
        message:
          type: array
          items:
            type: string
          example:
            - "phoneNumber must initiated with +62"
            - "fullName must at least 3 characters and max 60 characters"
            - "password must at least 6 characters and max 64 characters"

    PostV1TokensRequest:
      type: object
      properties:
        phoneNumber:
          type: string
          example: '+6281234567890'
        password:
          type: string
          example: ThisIsAPassword1234&

    PostV1TokensResponse201:
      type: object
      properties:
        userID:
          type: uuid
          example: "7e6e5b8e-007a-4bd4-bbcd-57b8e06a029d"
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

    InternalServerError:
      type: object
      properties:
        message:
          type: string
          example: "something wrong happened"