openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost:8080

tags:
  - name: Sign Up & Login
    description: APIs for new user sign up and login
  - name: User Profile
    description: APIs for user profile data

paths:
  /v1/users:
    post:
      tags:
        - Sign Up & Login
      summary: Create a new user
      description: Use this api to register a new user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostV1UsersRequest"
      responses:
        201:
          description: A new user successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostV1UsersResponse201"
        400:
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostV1UsersResponse400"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/token:
    post:
      tags:
        - Sign Up & Login
      summary: Create token for a user
      description: Use this API to create token for a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostV1TokenRequest"
      responses:
        201:
          description: A new tokens successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostV1TokenResponse201"
        400:
          description: Unsuccessful login
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/users/{userID}/profile:
    get:
      tags:
        - User Profile
      summary: Get profile of a user
      description: Use this API to get profile of a user
      parameters:
        - name: userID
          in: path
          required: true
          schema:
            type: string
            format: string
          example: "7e6e5b8e-007a-4bd4-bbcd-57b8e06a029d"
      responses:
        200:
          description: Successfully get a profile of a user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetV1UsersProfile"
        400:
          description: Invalid request. Could be userID empty or format invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: User ID is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


    patch:
      tags:
        - User Profile
      summary: Update profile of a user
      description: Use this api to update one or all data of a user profile.
      parameters:
        - name: userID
          in: path
          required: true
          schema:
            type: string
            format: string
          example: "7e6e5b8e-007a-4bd4-bbcd-57b8e06a029d"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchV1UsersProfileRequest"
      responses:
        204:
          description: Successfull update user profile.
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatchV1UsersProfileResponse400"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: User ID is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        409:
          description: Phone number is already exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    PostV1UsersRequest:
      type: object
      required:
        - phoneNumber
        - fullName
        - password
      properties:
        phoneNumber:
          type: string
          example: '+6281234567890'
        fullName:
          type: string
          example: John Doe
        password:
          type: string
          example: ThisIsAPassword1234&

    PostV1UsersResponse201:
      type: object
      required:
        - userID
      properties:
        userID:
          type: string
          example: "7e6e5b8e-007a-4bd4-bbcd-57b8e06a029d"

    PostV1UsersResponse400:
      type: object
      required:
        - message
      properties:
        message:
          type: array
          items:
            type: string
          example:
            - "phoneNumber must initiated with +62"
            - "fullName must at least 3 characters and max 60 characters"
            - "password must at least 6 characters and max 64 characters"

    PostV1TokenRequest:
      type: object
      properties:
        phoneNumber:
          type: string
          example: '+6281234567890'
        password:
          type: string
          example: ThisIsAPassword1234&

    PostV1TokenResponse201:
      type: object
      properties:
        userID:
          type: string
          example: "7e6e5b8e-007a-4bd4-bbcd-57b8e06a029d"
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

    GetV1UsersProfile:
      type: object
      properties:
        phoneNumber:
          type: string
          example: '+6281234567890'
        fullName:
          type: string
          example: John Doe

    PatchV1UsersProfileRequest:
      type: object
      properties:
        phoneNumber:
          type: string
          example: '+6281234567890'
        fullName:
          type: string
          example: John Doe

    PatchV1UsersProfileResponse400:
      type: object
      properties:
        message:
          type: array
          items:
            type: string
          example:
            - "phoneNumber must initiated with +62"
            - "fullName must at least 3 characters and max 60 characters"
            - "password must at least 6 characters and max 64 characters"

    Error:
      type: object
      properties:
        error:
          type: string
          example: "an error message"